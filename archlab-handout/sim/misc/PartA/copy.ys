#Execution begins at address 0
  .pos 0
  irmovq stack, %rsp
  call main
  halt

.align 8
# Source block
src:
  .quad 0x00a
  .quad 0x0b0
  .quad 0xc00
# Destination block
dest:
  .quad 0x111
  .quad 0x222
  .quad 0x333

main:
  irmovq src, %rdi
  irmovq dest, %rsi
  irmovq $3, %rcx
  call copy_block
  ret

copy_block:
  xorq %rax, %rax 
  irmovq $8, %r8
  irmovq $1, %r10
  jmp copy_block_test

copy_block_loop:
  mrmovq (%rdi), %rdx
  addq %r8, %rdi
  rmmovq %rdx, (%rsi)
  addq %r8, %rsi
  xorq %rdx, %rax
  subq %r10, %rcx

copy_block_test:
  andq %rcx, %rcx
  jne copy_block_loop
  ret
 

#Stack starts here ans grows to lower addresses
  .pos 0x200
stack:
