                            | #Execution begins at address 0
0x000:                      |   .pos 0
0x000: 30f40002000000000000 |   irmovq stack, %rsp
0x00a: 804800000000000000   |   call main
0x013: 00                   |   halt
                            | 
                            | # Sample linked list
0x018:                      | .align 8
0x018:                      | ele1:
0x018: 0a00000000000000     |   .quad 0x00a
0x020: 2800000000000000     |   .quad ele2
0x028:                      | ele2:
0x028: b000000000000000     |   .quad 0x0b0
0x030: 3800000000000000     |   .quad ele3
0x038:                      | ele3:
0x038: 000c000000000000     |   .quad 0xc00
0x040: 0000000000000000     |   .quad 0
                            | 
0x048:                      | main:
0x048: 30f71800000000000000 |   irmovq ele1, %rdi
0x052: 805c00000000000000   |   call rsum_list
0x05b: 90                   |   ret
                            | 
0x05c:                      | rsum_list:
0x05c: 6300                 |   xorq %rax, %rax
0x05e: 6277                 |   andq %rdi, %rdi
0x060: 746a00000000000000   |   jne rsum_list_1
0x069: 90                   |   ret 
0x06a:                      | rsum_list_1:
0x06a: 50670000000000000000 |   mrmovq (%rdi), %rsi
0x074: a06f                 |   pushq %rsi
0x076: 30f20800000000000000 |   irmovq $8, %rdx
0x080: 6072                 |   addq %rdi, %rdx
0x082: 50720000000000000000 |   mrmovq (%rdx), %rdi
0x08c: 805c00000000000000   |   call rsum_list
0x095: b06f                 |   popq %rsi
0x097: 6060                 |   addq %rsi, %rax
0x099: 90                   |   ret
                            | 
                            | #Stack starts here ans grows to lower addresses
0x200:                      |   .pos 0x200
0x200:                      | stack:
