                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4f004000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f64804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f71004000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: c0f2f9ffffffffffffff | 	iaddq $-7, %rdx
0x03c: 71b601000000000000   | 	jle Done8		# if so, goto Done1:
0x045:                      | Loop8:	
0x045: c0f2f8ffffffffffffff | iaddq $-8, %rdx		
0x04f: 50870000000000000000 |   mrmovq 0(%rdi), %r8	
0x059: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x063: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x06d: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11	
0x077: 6288                 | 	andq %r8, %r8	
0x079: 50c72000000000000000 | 	mrmovq 32(%rdi), %r12
0x083: 50d72800000000000000 | 	mrmovq 40(%rdi), %r13
0x08d: 50e73000000000000000 | 	mrmovq 48(%rdi), %r14
0x097: 50373800000000000000 | 	mrmovq 56(%rdi), %rbx
0x0a1: 71b400000000000000   | 	jle Npos81		
0x0aa: c0f00100000000000000 | 	iaddq $1, %rax	
0x0b4:                      | Npos81:
0x0b4: 6299                 | 	andq %r9, %r9	
0x0b6: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)	
0x0c0: 71d300000000000000   | 	jle Npos82		
0x0c9: c0f00100000000000000 | 	iaddq $1, %rax	
0x0d3:                      | Npos82:
0x0d3: 62aa                 | 	andq %r10, %r10		
0x0d5: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)	
0x0df: 71f200000000000000   | 	jle Npos83	
0x0e8: c0f00100000000000000 | 	iaddq $1, %rax	
0x0f2:                      | Npos83:
0x0f2: 62bb                 | 	andq %r11, %r11
0x0f4: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)	
0x0fe: 711101000000000000   | 	jle Npos84		
0x107: c0f00100000000000000 | 	iaddq $1, %rax	
0x111:                      | Npos84:
0x111: 62cc                 | 	andq %r12, %r12	
0x113: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)		
0x11d: 713001000000000000   | 	jle Npos85		
0x126: c0f00100000000000000 | 	iaddq $1, %rax	
0x130:                      | Npos85:
0x130: 62dd                 | 	andq %r13, %r13
0x132: 40c62000000000000000 | 	rmmovq %r12, 32(%rsi)	
0x13c: 714f01000000000000   | 	jle Npos86		
0x145: c0f00100000000000000 | 	iaddq $1, %rax	
0x14f:                      | Npos86:
0x14f: 62ee                 | 	andq %r14, %r14
0x151: 40d62800000000000000 | 	rmmovq %r13, 40(%rsi)	
0x15b: 716e01000000000000   | 	jle Npos87	
0x164: c0f00100000000000000 | 	iaddq $1, %rax	
0x16e:                      | Npos87:
0x16e: 6233                 | 	andq %rbx, %rbx	
0x170: 40e63000000000000000 | 	rmmovq %r14, 48(%rsi)	
0x17a: 718d01000000000000   | 	jle Npos88		
0x183: c0f00100000000000000 | 	iaddq $1, %rax	
0x18d:                      | Npos88:		
0x18d: c0f74000000000000000 | 	iaddq $64, %rdi	
0x197: c0f64000000000000000 | 	iaddq $64, %rsi	
0x1a1: 6222                 | 	andq %rdx,%rdx	
0x1a3: 4036f8ffffffffffffff | 	rmmovq %rbx, -8(%rsi)	
0x1ad: 764500000000000000   | 	jg Loop8		
0x1b6:                      | Done8:	
0x1b6: c0f20400000000000000 | 	iaddq $4, %rdx
0x1c0: 71e302000000000000   | 	jle Between0to3
0x1c9: 50870000000000000000 | 	mrmovq 0(%rdi), %r8	
0x1d3: 50970800000000000000 | 	mrmovq 8(%rdi), %r9	
0x1dd: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x1e7: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11	
0x1f1: 6288                 | 	andq %r8, %r8		
0x1f3: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)
0x1fd: 711002000000000000   | 	jle Npos41	
0x206: c0f00100000000000000 | 	iaddq $1, %rax	
0x210:                      | Npos41:
0x210: 6299                 | 	andq %r9, %r9	
0x212: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x21c: 712f02000000000000   | 	jle Npos42		
0x225: c0f00100000000000000 | 	iaddq $1, %rax	
0x22f:                      | Npos42:
0x22f: 62aa                 | 	andq %r10, %r10	
0x231: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x23b: 714e02000000000000   | 	jle Npos43	
0x244: c0f00100000000000000 | 	iaddq $1, %rax	
0x24e:                      | Npos43:
0x24e: 62bb                 | 	andq %r11, %r11	
0x250: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)	
0x25a: 716d02000000000000   | 	jle Npos44		
0x263: c0f00100000000000000 | 	iaddq $1, %rax	
0x26d:                      | Npos44:
0x26d: c0f72000000000000000 | 	iaddq $32, %rdi	
0x277: c0f62000000000000000 | 	iaddq $32, %rsi		
0x281:                      | Between4to7:
0x281: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x28b: 71b002000000000000   | 	jle Between4to5
0x294:                      | Between6to7:
0x294: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x29e: 740903000000000000   | 	jne len3
0x2a7: 708503000000000000   | 	jmp len2
0x2b0:                      | Between4to5:
0x2b0: 740b04000000000000   | 	jne Done
0x2b9: 50870000000000000000 | 	mrmovq 0(%rdi), %r8	
0x2c3: 6288                 | 	andq %r8, %r8	
0x2c5: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)
0x2cf: 710b04000000000000   | 	jle Done		
0x2d8: c0f00100000000000000 | 	iaddq $1, %rax	
0x2e2: 90                   | 	ret
0x2e3:                      | Between0to3:
0x2e3: c0f20200000000000000 | 	iaddq $2, %rdx
0x2ed: 71d803000000000000   | 	jle Between0to1
0x2f6:                      | Between2to3:
0x2f6: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x300: 718503000000000000   | 	jle len2
0x309:                      | len3:
0x309: 50870000000000000000 | 	mrmovq 0(%rdi), %r8	
0x313: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x31d: 6288                 | 	andq %r8, %r8	
0x31f: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x329: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)
0x333: 714603000000000000   | 	jle Npos31		
0x33c: c0f00100000000000000 | 	iaddq $1, %rax	
0x346:                      | Npos31:
0x346: 6299                 | 	andq %r9, %r9	
0x348: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x352: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x35c: 716f03000000000000   | 	jle Npos32		
0x365: c0f00100000000000000 | 	iaddq $1, %rax	
0x36f:                      | Npos32:
0x36f: 62aa                 | 	andq %r10, %r10		
0x371: 718403000000000000   | 	jle Npos33	
0x37a: c0f00100000000000000 | 	iaddq $1, %rax	
0x384:                      | Npos33:
0x384: 90                   | 	ret
0x385:                      | len2:
0x385: 50870000000000000000 | 	mrmovq 0(%rdi), %r8	
0x38f: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x399: 6288                 | 	andq %r8, %r8	
0x39b: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)
0x3a5: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x3af: 71c203000000000000   | 	jle Npos21		
0x3b8: c0f00100000000000000 | 	iaddq $1, %rax	
0x3c2:                      | Npos21:
0x3c2: 6299                 | 	andq %r9, %r9	
0x3c4: 710b04000000000000   | 	jle Done		
0x3cd: c0f00100000000000000 | 	iaddq $1, %rax	
0x3d7: 90                   | 	ret:
0x3d8:                      | Between0to1:
0x3d8: 740b04000000000000   | 	jne Done
0x3e1:                      | len1:
0x3e1: 50870000000000000000 | 	mrmovq 0(%rdi), %r8	
0x3eb: 6288                 | 	andq %r8, %r8	
0x3ed: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)
0x3f7: 710a04000000000000   | 	jle Npos11		
0x400: c0f00100000000000000 | 	iaddq $1, %rax	
0x40a:                      | Npos11:
0x40a: 90                   | 	ret
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x40b:                      | Done:	
0x40b: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x40c:                      | End:
                            | #/* $end ncopy-ys */
0x40c:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x410:                      | 	.align 8
0x410:                      | src:
0x410: 0100000000000000     | 	.quad 1
0x418: 0200000000000000     | 	.quad 2
0x420: fdffffffffffffff     | 	.quad -3
0x428: fcffffffffffffff     | 	.quad -4
0x430: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x440:                      | 	.align 16
0x440:                      | Predest:
0x440: fadebc0000000000     | 	.quad 0xbcdefa
0x448:                      | dest:
0x448: abefcd0000000000     | 	.quad 0xcdefab
0x450: abefcd0000000000     | 	.quad 0xcdefab
0x458: abefcd0000000000     | 	.quad 0xcdefab
0x460: abefcd0000000000     | 	.quad 0xcdefab
0x468:                      | Postdest:
0x468: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x470:                      | .align 8
                            | # Run time stack
0x470: 0000000000000000     | 	.quad 0
0x478: 0000000000000000     | 	.quad 0
0x480: 0000000000000000     | 	.quad 0
0x488: 0000000000000000     | 	.quad 0
0x490: 0000000000000000     | 	.quad 0
0x498: 0000000000000000     | 	.quad 0
0x4a0: 0000000000000000     | 	.quad 0
0x4a8: 0000000000000000     | 	.quad 0
0x4b0: 0000000000000000     | 	.quad 0
0x4b8: 0000000000000000     | 	.quad 0
0x4c0: 0000000000000000     | 	.quad 0
0x4c8: 0000000000000000     | 	.quad 0
0x4d0: 0000000000000000     | 	.quad 0
0x4d8: 0000000000000000     | 	.quad 0
0x4e0: 0000000000000000     | 	.quad 0
0x4e8: 0000000000000000     | 	.quad 0
                            | 
0x4f0:                      | Stack:
