                            | #######################################################################
                            | # Test for copying block of size 4;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f4d004000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f20400000000000000 | 	irmovq $4, %rdx		# src and dst have 4 elements
0x014: 30f62804000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7f003000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: c0f2f9ffffffffffffff | 	iaddq $-7, %rdx
0x03c: 71b601000000000000   | 	jle Done8		# if so, goto Done1:
0x045:                      | Loop8:	
0x045: 50870000000000000000 |   mrmovq 0(%rdi), %r8	
0x04f: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx		
0x059: 6288                 | 	andq %r8, %r8	
0x05b: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x065: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x06f: 718200000000000000   | 	jle Npos81		
0x078: c0f00100000000000000 | 	iaddq $1, %rax	
0x082:                      | Npos81:
0x082: 6299                 | 	andq %r9, %r9	
0x084: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11		
0x08e: 50c72000000000000000 | 	mrmovq 32(%rdi), %r12
0x098: 71ab00000000000000   | 	jle Npos82		
0x0a1: c0f00100000000000000 | 	iaddq $1, %rax	
0x0ab:                      | Npos82:
0x0ab: 62aa                 | 	andq %r10, %r10	
0x0ad: 50d72800000000000000 | 	mrmovq 40(%rdi), %r13
0x0b7: 50e73000000000000000 | 	mrmovq 48(%rdi), %r14
0x0c1: 71d400000000000000   | 	jle Npos83	
0x0ca: c0f00100000000000000 | 	iaddq $1, %rax	
0x0d4:                      | Npos83:
0x0d4: 62bb                 | 	andq %r11, %r11
0x0d6: 50373800000000000000 | 	mrmovq 56(%rdi), %rbx
0x0e0: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)	
0x0ea: 71fd00000000000000   | 	jle Npos84		
0x0f3: c0f00100000000000000 | 	iaddq $1, %rax	
0x0fd:                      | Npos84:
0x0fd: 62cc                 | 	andq %r12, %r12	
0x0ff: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)	
0x109: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)	
0x113: 712601000000000000   | 	jle Npos85		
0x11c: c0f00100000000000000 | 	iaddq $1, %rax	
0x126:                      | Npos85:
0x126: 62dd                 | 	andq %r13, %r13
0x128: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)		
0x132: 40c62000000000000000 | 	rmmovq %r12, 32(%rsi)	
0x13c: 714f01000000000000   | 	jle Npos86		
0x145: c0f00100000000000000 | 	iaddq $1, %rax	
0x14f:                      | Npos86:
0x14f: 62ee                 | 	andq %r14, %r14
0x151: 40d62800000000000000 | 	rmmovq %r13, 40(%rsi)	
0x15b: 40e63000000000000000 | 	rmmovq %r14, 48(%rsi)	
0x165: 717801000000000000   | 	jle Npos87	
0x16e: c0f00100000000000000 | 	iaddq $1, %rax	
0x178:                      | Npos87:
0x178: 6233                 | 	andq %rbx, %rbx	
0x17a: 40363800000000000000 | 	rmmovq %rbx, 56(%rsi)	
0x184: 719701000000000000   | 	jle Npos88		
0x18d: c0f00100000000000000 | 	iaddq $1, %rax	
0x197:                      | Npos88:		
0x197: c0f74000000000000000 | 	iaddq $64, %rdi	
0x1a1: c0f64000000000000000 | 	iaddq $64, %rsi	
0x1ab: 6222                 | 	andq %rdx,%rdx	
0x1ad: 764500000000000000   | 	jg Loop8		
0x1b6:                      | Done8:	
0x1b6: c0f20400000000000000 | 	iaddq $4, %rdx
0x1c0: 71c202000000000000   | 	jle Between0to3
0x1c9: 50870000000000000000 | 	mrmovq 0(%rdi), %r8	
0x1d3: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x1dd: 6288                 | 	andq %r8, %r8	
0x1df: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x1e9: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11
0x1f3: 710602000000000000   | 	jle Npos41		
0x1fc: c0f00100000000000000 | 	iaddq $1, %rax	
0x206:                      | Npos41:
0x206: 6299                 | 	andq %r9, %r9	
0x208: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)
0x212: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x21c: 712f02000000000000   | 	jle Npos42		
0x225: c0f00100000000000000 | 	iaddq $1, %rax	
0x22f:                      | Npos42:
0x22f: 62aa                 | 	andq %r10, %r10	
0x231: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x23b: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)	
0x245: 715802000000000000   | 	jle Npos43	
0x24e: c0f00100000000000000 | 	iaddq $1, %rax	
0x258:                      | Npos43:
0x258: 62bb                 | 	andq %r11, %r11	
0x25a: 716d02000000000000   | 	jle Npos44		
0x263: c0f00100000000000000 | 	iaddq $1, %rax	
0x26d:                      | Npos44:
0x26d: c0f72000000000000000 | 	iaddq $32, %rdi	
0x277: c0f62000000000000000 | 	iaddq $32, %rsi		
0x281:                      | Between4to7:
0x281: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x28b: 71b002000000000000   | 	jle Between4to5
0x294:                      | Between6to7:
0x294: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x29e: 736403000000000000   | 	je len2
0x2a7: 70e802000000000000   | 	jmp len3
0x2b0:                      | Between4to5:
0x2b0: 74ea03000000000000   | 	jne Done
0x2b9: 70c003000000000000   | 	jmp len1
0x2c2:                      | Between0to3:
0x2c2: c0f20200000000000000 | 	iaddq $2, %rdx
0x2cc: 71b703000000000000   | 	jle Between0to1
0x2d5:                      | Between2to3:
0x2d5: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x2df: 716403000000000000   | 	jle len2
0x2e8:                      | len3:
0x2e8: 50870000000000000000 | 	mrmovq 0(%rdi), %r8	
0x2f2: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x2fc: 6288                 | 	andq %r8, %r8	
0x2fe: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x308: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)
0x312: 712503000000000000   | 	jle Npos31		
0x31b: c0f00100000000000000 | 	iaddq $1, %rax	
0x325:                      | Npos31:
0x325: 6299                 | 	andq %r9, %r9	
0x327: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x331: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)
0x33b: 714e03000000000000   | 	jle Npos32		
0x344: c0f00100000000000000 | 	iaddq $1, %rax	
0x34e:                      | Npos32:
0x34e: 62aa                 | 	andq %r10, %r10		
0x350: 716303000000000000   | 	jle Npos33	
0x359: c0f00100000000000000 | 	iaddq $1, %rax	
0x363:                      | Npos33:
0x363: 90                   | 	ret
0x364:                      | len2:
0x364: 50870000000000000000 | 	mrmovq 0(%rdi), %r8	
0x36e: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x378: 6288                 | 	andq %r8, %r8	
0x37a: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)
0x384: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)
0x38e: 71a103000000000000   | 	jle Npos21		
0x397: c0f00100000000000000 | 	iaddq $1, %rax	
0x3a1:                      | Npos21:
0x3a1: 6299                 | 	andq %r9, %r9	
0x3a3: 71b603000000000000   | 	jle Npos22		
0x3ac: c0f00100000000000000 | 	iaddq $1, %rax	
0x3b6:                      | Npos22:
0x3b6: 90                   | 	ret:
0x3b7:                      | Between0to1:
0x3b7: 74ea03000000000000   | 	jne Done
0x3c0:                      | len1:
0x3c0: 50870000000000000000 | 	mrmovq 0(%rdi), %r8	
0x3ca: 6288                 | 	andq %r8, %r8	
0x3cc: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)
0x3d6: 71e903000000000000   | 	jle Npos11		
0x3df: c0f00100000000000000 | 	iaddq $1, %rax	
0x3e9:                      | Npos11:
0x3e9: 90                   | 	ret
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x3ea:                      | Done:	
0x3ea: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x3eb:                      | End:
                            | #/* $end ncopy-ys */
0x3eb:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x3f0:                      | 	.align 8
0x3f0:                      | src:
0x3f0: 0100000000000000     | 	.quad 1
0x3f8: feffffffffffffff     | 	.quad -2
0x400: 0300000000000000     | 	.quad 3
0x408: fcffffffffffffff     | 	.quad -4
0x410: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x420:                      | 	.align 16
0x420:                      | Predest:
0x420: fadebc0000000000     | 	.quad 0xbcdefa
0x428:                      | dest:
0x428: abefcd0000000000     | 	.quad 0xcdefab
0x430: abefcd0000000000     | 	.quad 0xcdefab
0x438: abefcd0000000000     | 	.quad 0xcdefab
0x440: abefcd0000000000     | 	.quad 0xcdefab
0x448:                      | Postdest:
0x448: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x450:                      | .align 8
                            | # Run time stack
0x450: 0000000000000000     | 	.quad 0
0x458: 0000000000000000     | 	.quad 0
0x460: 0000000000000000     | 	.quad 0
0x468: 0000000000000000     | 	.quad 0
0x470: 0000000000000000     | 	.quad 0
0x478: 0000000000000000     | 	.quad 0
0x480: 0000000000000000     | 	.quad 0
0x488: 0000000000000000     | 	.quad 0
0x490: 0000000000000000     | 	.quad 0
0x498: 0000000000000000     | 	.quad 0
0x4a0: 0000000000000000     | 	.quad 0
0x4a8: 0000000000000000     | 	.quad 0
0x4b0: 0000000000000000     | 	.quad 0
0x4b8: 0000000000000000     | 	.quad 0
0x4c0: 0000000000000000     | 	.quad 0
0x4c8: 0000000000000000     | 	.quad 0
                            | 
0x4d0:                      | Stack:
