                            | #######################################################################
                            | # Test for copying block of size 63;
                            | #######################################################################
0x000:                      | 	.pos 0
0x000: 30f42808000000000000 | main:	irmovq Stack, %rsp  	# Set up stack pointer
                            | 
                            | 	# Set up arguments for copy function and then invoke it
0x00a: 30f23f00000000000000 | 	irmovq $63, %rdx		# src and dst have 63 elements
0x014: 30f6a805000000000000 | 	irmovq dest, %rsi	# dst array
0x01e: 30f7a003000000000000 | 	irmovq src, %rdi	# src array
0x028: 803200000000000000   | 	call ncopy		 
0x031: 00                   | 	halt			# should halt with num nonzeros in %rax
0x032:                      | StartFun:
                            | #/* $begin ncopy-ys */
                            | ##################################################################
                            | # ncopy.ys - Copy a src block of len words to dst.
                            | # Return the number of positive words (>0) contained in src.
                            | #
                            | # Include your name and ID here.
                            | #
                            | # Describe how and why you modified the baseline code.
                            | #
                            | ##################################################################
                            | # Do not modify this portion
                            | # Function prologue.
                            | # %rdi = src, %rsi = dst, %rdx = len
0x032:                      | ncopy:
                            | 
                            | ##################################################################
                            | # You can modify this portion
                            | 	# Loop header
0x032: c0f2f9ffffffffffffff | 	iaddq $-7, %rdx
0x03c: 71b401000000000000   | 	jle Done8		# if so, goto Done1:
0x045:                      | Loop8:	
0x045: 50870000000000000000 |   mrmovq (%rdi), %r8	
0x04f: 50970800000000000000 | 	mrmovq 8(%rdi), %r9
0x059: 50a71000000000000000 | 	mrmovq 16(%rdi), %r10
0x063: 50b71800000000000000 | 	mrmovq 24(%rdi), %r11	
0x06d: 50c72000000000000000 | 	mrmovq 32(%rdi), %r12
0x077: 50d72800000000000000 | 	mrmovq 40(%rdi), %r13
0x081: 50e73000000000000000 | 	mrmovq 48(%rdi), %r14
0x08b: 50373800000000000000 | 	mrmovq 56(%rdi), %rbx
0x095: 6288                 | 	andq %r8, %r8	
0x097: 40860000000000000000 | 	rmmovq %r8, 0(%rsi)	
0x0a1: 71b400000000000000   | 	jle Npos81		
0x0aa: c0f00100000000000000 | 	iaddq $1, %rax	
0x0b4:                      | Npos81:
0x0b4: 6299                 | 	andq %r9, %r9	
0x0b6: 40960800000000000000 | 	rmmovq %r9, 8(%rsi)	
0x0c0: 71d300000000000000   | 	jle Npos82		
0x0c9: c0f00100000000000000 | 	iaddq $1, %rax	
0x0d3:                      | Npos82:
0x0d3: 62aa                 | 	andq %r10, %r10		
0x0d5: 40a61000000000000000 | 	rmmovq %r10, 16(%rsi)	
0x0df: 71f200000000000000   | 	jle Npos83	
0x0e8: c0f00100000000000000 | 	iaddq $1, %rax	
0x0f2:                      | Npos83:
0x0f2: 62bb                 | 	andq %r11, %r11
0x0f4: 40b61800000000000000 | 	rmmovq %r11, 24(%rsi)	
0x0fe: 711101000000000000   | 	jle Npos84		
0x107: c0f00100000000000000 | 	iaddq $1, %rax	
0x111:                      | Npos84:
0x111: 62cc                 | 	andq %r12, %r12	
0x113: 40c62000000000000000 | 	rmmovq %r12, 32(%rsi)		
0x11d: 713001000000000000   | 	jle Npos85		
0x126: c0f00100000000000000 | 	iaddq $1, %rax	
0x130:                      | Npos85:
0x130: 62dd                 | 	andq %r13, %r13
0x132: 40d62800000000000000 | 	rmmovq %r13, 40(%rsi)	
0x13c: 714f01000000000000   | 	jle Npos86		
0x145: c0f00100000000000000 | 	iaddq $1, %rax	
0x14f:                      | Npos86:
0x14f: 62ee                 | 	andq %r14, %r14
0x151: 40e63000000000000000 | 	rmmovq %r14, 48(%rsi)	
0x15b: 716e01000000000000   | 	jle Npos87	
0x164: c0f00100000000000000 | 	iaddq $1, %rax	
0x16e:                      | Npos87:
0x16e: 6233                 | 	andq %rbx, %rbx	
0x170: 40363800000000000000 | 	rmmovq %rbx, 56(%rsi)	
0x17a: 718d01000000000000   | 	jle Npos88		
0x183: c0f00100000000000000 | 	iaddq $1, %rax	
0x18d:                      | Npos88:		
0x18d: c0f74000000000000000 | 	iaddq $64, %rdi	
0x197: c0f64000000000000000 | 	iaddq $64, %rsi	
0x1a1: c0f2f8ffffffffffffff | 	iaddq $-8, %rdx			
0x1ab: 764500000000000000   | 	jg Loop8		
0x1b4:                      | Done8:	
0x1b4: c0f20400000000000000 | 	iaddq $4, %rdx
0x1be: 711c02000000000000   | 	jle Between0to3
0x1c7:                      | Between4to7:
0x1c7: c0f2feffffffffffffff | 	iaddq $-2, %rdx
0x1d1: 710002000000000000   | 	jle Between4to5
0x1da:                      | Between6to7:	
0x1da: c0f2ffffffffffffffff | 	iaddq $-1, %rdx 
0x1e4: 739202000000000000   | 	je Len6
0x1ed: 50873000000000000000 | 	mrmovq 48(%rdi), %r8
0x1f7: 706902000000000000   | 	jmp len7
0x200:                      | Between4to5:
0x200: 74ee02000000000000   | 	jne Len4		
0x209: 50972000000000000000 | 	mrmovq 32(%rdi), %r9
0x213: 70c502000000000000   | 	jmp len5
0x21c:                      | Between0to3:
0x21c: c0f20200000000000000 | 	iaddq $2, %rdx
0x226: 715502000000000000   | 	jle Between0to1
0x22f:                      | Between2to3:
0x22f: c0f2ffffffffffffffff | 	iaddq $-1, %rdx
0x239: 714a03000000000000   | 	jle Len2
0x242: 50971000000000000000 | 	mrmovq 16(%rdi), %r9
0x24c: 702103000000000000   | 	jmp len3
0x255:                      | Between0to1:
0x255: 50970000000000000000 | 	mrmovq (%rdi), %r9
0x25f: 737d03000000000000   | 	je len1
0x268: 90                   | 	ret
0x269:                      | len7:
0x269: 6288                 | 	andq %r8, %r8	
0x26b: 40863000000000000000 | 	rmmovq %r8, 48(%rsi)
0x275: 50872800000000000000 | 	mrmovq 40(%rdi), %r8
0x27f: 719c02000000000000   | 	jle len6		
0x288: c0f00100000000000000 | 	iaddq $1, %rax	
0x292:                      | Len6:
0x292: 50872800000000000000 | 	mrmovq 40(%rdi), %r8
0x29c:                      | len6:
0x29c: 50972000000000000000 | 	mrmovq 32(%rdi), %r9
0x2a6: 6288                 | 	andq %r8, %r8	
0x2a8: 40862800000000000000 | 	rmmovq %r8, 40(%rsi)
0x2b2: 71c502000000000000   | 	jle len5		
0x2bb: c0f00100000000000000 | 	iaddq $1, %rax	
0x2c5:                      | len5:
0x2c5: 6299                 | 	andq %r9, %r9	
0x2c7: 40962000000000000000 | 	rmmovq %r9, 32(%rsi)
0x2d1: 50871800000000000000 | 	mrmovq 24(%rdi), %r8
0x2db: 71f802000000000000   | 	jle len4		
0x2e4: c0f00100000000000000 | 	iaddq $1, %rax	
0x2ee:                      | Len4:
0x2ee: 50871800000000000000 | 	mrmovq 24(%rdi), %r8
0x2f8:                      | len4:
0x2f8: 50971000000000000000 | 	mrmovq 16(%rdi), %r9
0x302: 6288                 | 	andq %r8, %r8		
0x304: 40861800000000000000 | 	rmmovq %r8, 24(%rsi)
0x30e: 712103000000000000   | 	jle len3		
0x317: c0f00100000000000000 | 	iaddq $1, %rax	
0x321:                      | len3:
0x321: 6299                 | 	andq %r9, %r9
0x323: 40961000000000000000 | 	rmmovq %r9, 16(%rsi)
0x32d: 50870800000000000000 | 	mrmovq 8(%rdi), %r8
0x337: 715403000000000000   | 	jle len2		
0x340: c0f00100000000000000 | 	iaddq $1, %rax
0x34a:                      | Len2:
0x34a: 50870800000000000000 | 	mrmovq 8(%rdi), %r8
0x354:                      | len2:
0x354: 50970000000000000000 | 	mrmovq (%rdi), %r9
0x35e: 6288                 | 	andq %r8, %r8		
0x360: 40860800000000000000 | 	rmmovq %r8, 8(%rsi)
0x36a: 717d03000000000000   | 	jle len1		
0x373: c0f00100000000000000 | 	iaddq $1, %rax	
0x37d:                      | len1:
0x37d: 6299                 | 	andq %r9, %r9
0x37f: 40960000000000000000 | 	rmmovq %r9, (%rsi)
0x389: 719c03000000000000   | 	jle Done		
0x392: c0f00100000000000000 | 	iaddq $1, %rax	
                            | ##################################################################
                            | # Do not modify the following section of code
                            | # Function epilogue.
0x39c:                      | Done:	
0x39c: 90                   | 	ret
                            | ##################################################################
                            | # Keep the following label at the end of your function
0x39d:                      | End:
                            | #/* $end ncopy-ys */
0x39d:                      | EndFun:
                            | 
                            | ###############################
                            | # Source and destination blocks 
                            | ###############################
0x3a0:                      | 	.align 8
0x3a0:                      | src:
0x3a0: 0100000000000000     | 	.quad 1
0x3a8: 0200000000000000     | 	.quad 2
0x3b0: fdffffffffffffff     | 	.quad -3
0x3b8: 0400000000000000     | 	.quad 4
0x3c0: 0500000000000000     | 	.quad 5
0x3c8: 0600000000000000     | 	.quad 6
0x3d0: 0700000000000000     | 	.quad 7
0x3d8: f8ffffffffffffff     | 	.quad -8
0x3e0: 0900000000000000     | 	.quad 9
0x3e8: 0a00000000000000     | 	.quad 10
0x3f0: f5ffffffffffffff     | 	.quad -11
0x3f8: f4ffffffffffffff     | 	.quad -12
0x400: f3ffffffffffffff     | 	.quad -13
0x408: f2ffffffffffffff     | 	.quad -14
0x410: f1ffffffffffffff     | 	.quad -15
0x418: f0ffffffffffffff     | 	.quad -16
0x420: 1100000000000000     | 	.quad 17
0x428: 1200000000000000     | 	.quad 18
0x430: edffffffffffffff     | 	.quad -19
0x438: 1400000000000000     | 	.quad 20
0x440: ebffffffffffffff     | 	.quad -21
0x448: 1600000000000000     | 	.quad 22
0x450: 1700000000000000     | 	.quad 23
0x458: e8ffffffffffffff     | 	.quad -24
0x460: 1900000000000000     | 	.quad 25
0x468: e6ffffffffffffff     | 	.quad -26
0x470: e5ffffffffffffff     | 	.quad -27
0x478: e4ffffffffffffff     | 	.quad -28
0x480: 1d00000000000000     | 	.quad 29
0x488: e2ffffffffffffff     | 	.quad -30
0x490: 1f00000000000000     | 	.quad 31
0x498: 2000000000000000     | 	.quad 32
0x4a0: dfffffffffffffff     | 	.quad -33
0x4a8: deffffffffffffff     | 	.quad -34
0x4b0: ddffffffffffffff     | 	.quad -35
0x4b8: 2400000000000000     | 	.quad 36
0x4c0: dbffffffffffffff     | 	.quad -37
0x4c8: daffffffffffffff     | 	.quad -38
0x4d0: 2700000000000000     | 	.quad 39
0x4d8: d8ffffffffffffff     | 	.quad -40
0x4e0: d7ffffffffffffff     | 	.quad -41
0x4e8: 2a00000000000000     | 	.quad 42
0x4f0: 2b00000000000000     | 	.quad 43
0x4f8: d4ffffffffffffff     | 	.quad -44
0x500: d3ffffffffffffff     | 	.quad -45
0x508: d2ffffffffffffff     | 	.quad -46
0x510: 2f00000000000000     | 	.quad 47
0x518: 3000000000000000     | 	.quad 48
0x520: cfffffffffffffff     | 	.quad -49
0x528: 3200000000000000     | 	.quad 50
0x530: cdffffffffffffff     | 	.quad -51
0x538: 3400000000000000     | 	.quad 52
0x540: cbffffffffffffff     | 	.quad -53
0x548: caffffffffffffff     | 	.quad -54
0x550: c9ffffffffffffff     | 	.quad -55
0x558: 3800000000000000     | 	.quad 56
0x560: 3900000000000000     | 	.quad 57
0x568: 3a00000000000000     | 	.quad 58
0x570: 3b00000000000000     | 	.quad 59
0x578: c4ffffffffffffff     | 	.quad -60
0x580: c3ffffffffffffff     | 	.quad -61
0x588: 3e00000000000000     | 	.quad 62
0x590: 3f00000000000000     | 	.quad 63
0x598: fadebc0000000000     | 	.quad 0xbcdefa # This shouldn't get moved
                            | 
0x5a0:                      | 	.align 16
0x5a0:                      | Predest:
0x5a0: fadebc0000000000     | 	.quad 0xbcdefa
0x5a8:                      | dest:
0x5a8: abefcd0000000000     | 	.quad 0xcdefab
0x5b0: abefcd0000000000     | 	.quad 0xcdefab
0x5b8: abefcd0000000000     | 	.quad 0xcdefab
0x5c0: abefcd0000000000     | 	.quad 0xcdefab
0x5c8: abefcd0000000000     | 	.quad 0xcdefab
0x5d0: abefcd0000000000     | 	.quad 0xcdefab
0x5d8: abefcd0000000000     | 	.quad 0xcdefab
0x5e0: abefcd0000000000     | 	.quad 0xcdefab
0x5e8: abefcd0000000000     | 	.quad 0xcdefab
0x5f0: abefcd0000000000     | 	.quad 0xcdefab
0x5f8: abefcd0000000000     | 	.quad 0xcdefab
0x600: abefcd0000000000     | 	.quad 0xcdefab
0x608: abefcd0000000000     | 	.quad 0xcdefab
0x610: abefcd0000000000     | 	.quad 0xcdefab
0x618: abefcd0000000000     | 	.quad 0xcdefab
0x620: abefcd0000000000     | 	.quad 0xcdefab
0x628: abefcd0000000000     | 	.quad 0xcdefab
0x630: abefcd0000000000     | 	.quad 0xcdefab
0x638: abefcd0000000000     | 	.quad 0xcdefab
0x640: abefcd0000000000     | 	.quad 0xcdefab
0x648: abefcd0000000000     | 	.quad 0xcdefab
0x650: abefcd0000000000     | 	.quad 0xcdefab
0x658: abefcd0000000000     | 	.quad 0xcdefab
0x660: abefcd0000000000     | 	.quad 0xcdefab
0x668: abefcd0000000000     | 	.quad 0xcdefab
0x670: abefcd0000000000     | 	.quad 0xcdefab
0x678: abefcd0000000000     | 	.quad 0xcdefab
0x680: abefcd0000000000     | 	.quad 0xcdefab
0x688: abefcd0000000000     | 	.quad 0xcdefab
0x690: abefcd0000000000     | 	.quad 0xcdefab
0x698: abefcd0000000000     | 	.quad 0xcdefab
0x6a0: abefcd0000000000     | 	.quad 0xcdefab
0x6a8: abefcd0000000000     | 	.quad 0xcdefab
0x6b0: abefcd0000000000     | 	.quad 0xcdefab
0x6b8: abefcd0000000000     | 	.quad 0xcdefab
0x6c0: abefcd0000000000     | 	.quad 0xcdefab
0x6c8: abefcd0000000000     | 	.quad 0xcdefab
0x6d0: abefcd0000000000     | 	.quad 0xcdefab
0x6d8: abefcd0000000000     | 	.quad 0xcdefab
0x6e0: abefcd0000000000     | 	.quad 0xcdefab
0x6e8: abefcd0000000000     | 	.quad 0xcdefab
0x6f0: abefcd0000000000     | 	.quad 0xcdefab
0x6f8: abefcd0000000000     | 	.quad 0xcdefab
0x700: abefcd0000000000     | 	.quad 0xcdefab
0x708: abefcd0000000000     | 	.quad 0xcdefab
0x710: abefcd0000000000     | 	.quad 0xcdefab
0x718: abefcd0000000000     | 	.quad 0xcdefab
0x720: abefcd0000000000     | 	.quad 0xcdefab
0x728: abefcd0000000000     | 	.quad 0xcdefab
0x730: abefcd0000000000     | 	.quad 0xcdefab
0x738: abefcd0000000000     | 	.quad 0xcdefab
0x740: abefcd0000000000     | 	.quad 0xcdefab
0x748: abefcd0000000000     | 	.quad 0xcdefab
0x750: abefcd0000000000     | 	.quad 0xcdefab
0x758: abefcd0000000000     | 	.quad 0xcdefab
0x760: abefcd0000000000     | 	.quad 0xcdefab
0x768: abefcd0000000000     | 	.quad 0xcdefab
0x770: abefcd0000000000     | 	.quad 0xcdefab
0x778: abefcd0000000000     | 	.quad 0xcdefab
0x780: abefcd0000000000     | 	.quad 0xcdefab
0x788: abefcd0000000000     | 	.quad 0xcdefab
0x790: abefcd0000000000     | 	.quad 0xcdefab
0x798: abefcd0000000000     | 	.quad 0xcdefab
0x7a0:                      | Postdest:
0x7a0: bcfade0000000000     | 	.quad 0xdefabc
                            | 
0x7a8:                      | .align 8
                            | # Run time stack
0x7a8: 0000000000000000     | 	.quad 0
0x7b0: 0000000000000000     | 	.quad 0
0x7b8: 0000000000000000     | 	.quad 0
0x7c0: 0000000000000000     | 	.quad 0
0x7c8: 0000000000000000     | 	.quad 0
0x7d0: 0000000000000000     | 	.quad 0
0x7d8: 0000000000000000     | 	.quad 0
0x7e0: 0000000000000000     | 	.quad 0
0x7e8: 0000000000000000     | 	.quad 0
0x7f0: 0000000000000000     | 	.quad 0
0x7f8: 0000000000000000     | 	.quad 0
0x800: 0000000000000000     | 	.quad 0
0x808: 0000000000000000     | 	.quad 0
0x810: 0000000000000000     | 	.quad 0
0x818: 0000000000000000     | 	.quad 0
0x820: 0000000000000000     | 	.quad 0
                            | 
0x828:                      | Stack:
